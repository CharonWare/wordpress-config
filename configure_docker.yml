---
- name: Configure Docker
  hosts: dev
  vars:
    mariadb_dir: "/home/{{ ansible_user }}/mariadb"
    mariadb_vol: "{{ mariadb_dir }}/database"
    wordpress_dir: "/home/{{ ansible_user }}/wordpress"
  vars_files:
    - secrets.yml

  handlers:
    - name: Restart Dockerd
      become: true
      service: 
        name: docker
        state: restarted

  tasks:
    - name: Download the Docker files
    # Due to the target machine being a raspberry pi we will let Docker handle the install
      get_url:
        url: https://get.docker.com
        dest: /home/{{ ansible_user }}/get-docker.sh
        mode: 0550

    - name: Install Docker
      script: /home/{{ ansible_user }}/get-docker.sh
      args:
        creates: /usr/bin/docker
      notify: Start Dockerd

    - name: Start Dockerd
      become: true
      service: 
        name: docker
        state: started
    
    - name: Log into DockerHub
      community.docker.docker_login:
        username: "{{ docker_login }}"
        password: "{{ docker_access_token }}"

    - name: Create directory for mariadb volume
      file:
        path: "{{ mariadb_vol }}"
        state: directory
        mode: '0755'

    - name: Copy MariaDB Dockerfile to host
      template:
        src: templates/mariadb_dockerfile.j2
        dest: "{{ mariadb_dir }}/Dockerfile"
        mode: '0755'

    - name: Start MariaDB
      shell: docker start mariadb_staging

    - name: Create directory for Wordpress
      file:
        path: "{{ wordpress_dir }}"
        state: directory
        mode: '0755'

    - name: Copy Wordpress Dockerfile to host
      template:
        src: templates/wordpress_dockerfile.j2
        dest: "{{ wordpress_dir }}/Dockerfile"
        mode: '0755'

#    - name: Start Wordpress
#      shell: docker start wordpress_staging

    - name: Build Wordpress
      community.docker.docker_image:
        build:
          path: "{{ wordpress_dir }}"
        name: wordpress_staging
        state: present
        source: build

    - name: Run Wordpress
      shell: docker run  --hostname wordpress --name wordpress_staging -P --detach wordpress_staging
...